---
// Config
import { SITE } from '../config';

// Layout
import Layout from '../layouts/Layout.astro';

// Component
import Hero from '../components/Hero.astro';
import About from '../components/About.astro';
import SectionTitle from '../components/SectionTitle.astro';
import Works from '../components/Works.astro';
import Skills from '../components/Skills.astro';
---

<Layout title={SITE.title} description={SITE.description}>
  <main class="l-site__main">
    <!-- Hero -->
    <Hero />

    <!-- About -->
    <section class="section -about">
      <SectionTitle text="About" />
      <About />
    </section>

    <!-- Works -->
    <section class="section">
      <SectionTitle text="Works" className="-reverse" />
      <Works />
    </section>

    <!-- Skills -->
    <section class="section">
      <SectionTitle text="Skills" />
      <Skills />
    </section>

    <!-- Contact -->
    <div class="section -contact">
      <p class="u-text-center" lang="en">
        <a class="contactLink" href="mailto:sakucode1993@gmail.com">
          <span class="contactLink__text">Contact Me</span>
          <svg aria-hidden="true" class="contactLink__icon">
            <use href="#send"></use>
          </svg>
        </a>
      </p>
    </div>
  </main>
</Layout>

<style lang="scss">
  @use '../assets/scss/global' as *;

  .section {
    padding-top: fluid(80, 140, var(--sp-comp-width), var(--pc-comp-width));

    &.-about {
      padding-top: fluid(80, 148, var(--sp-comp-width), var(--pc-comp-width));
    }

    &.-contact {
      padding-top: fluid(80, 148, var(--sp-comp-width), var(--pc-comp-width));
      padding-bottom: fluid(120, 160, var(--sp-comp-width), var(--pc-comp-width));
    }
  }

  .contactLink {
    position: relative;
    align-items: flex-end;
    padding-inline: 1rem;
    column-gap: 0.5rem;
    transition-property: transfrom, padding;
    transition-duration: 0.3s;
    transition-timing-function: var(--easing);
    font-size: fluid(48, 88, var(--sp-comp-width), var(--pc-comp-width));
    line-height: 1;

    @include mq(md) {
      padding-inline: 1.5rem 0.5rem;
    }

    &::after {
      content: '';
      display: block;
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      transform-origin: right bottom;
      transition: transform 0.3s var(--easing);
      background-color: currentcolor;
    }

    @include hover {
      padding-right: 1.15em;

      &::after {
        transform: scaleX(0);
      }

      .contactLink__text {
        transform: translate3d(-1rem, 0, 0);
      }

      .contactLink__icon {
        visibility: visible;
        transform: translateY(-50%) scale(1);
      }
    }
  }

  .contactLink__text {
    transition: transform 0.3s ease-in-out;
  }

  .contactLink__icon {
    --size: 0.875em;

    visibility: hidden;
    position: absolute;
    top: 50%;
    right: 0;
    width: var(--size);
    height: var(--size);
    transform: translateY(-50%) scale(0);
    transition: transform 0.3s ease-in-out;
    fill: currentcolor;
  }
</style>

<script>
  import { SetObserver } from '../assets/js/setObserver';

  /**
   * heroセクションを監視する関数
   * @param entries - 監視対象要素
   */
  const heroObserve = (entries) => {
    if (!entries[0].isIntersecting) {
      document.documentElement.classList.add('is-heroOver');
    } else {
      document.documentElement.classList.remove('is-heroOver');
    }
  };

  new SetObserver('#js-hero', heroObserve);
</script>
