---
// Config
import { SITE } from '../config';

// Layout
import Layout from '../layouts/Layout.astro';

// Component
import Hero from '../components/Hero.astro';
import About from '../components/About.astro';
import SectionTitle from '../components/SectionTitle.astro';
import Works from '../components/Works.astro';
import Skills from '../components/Skills.astro';
---

<Layout title={SITE.title} description={SITE.description}>
  <main class="l-site__main">
    <!-- Hero -->
    <Hero />

    <!-- About -->
    <section class="section -about">
      <SectionTitle text="About" />
      <About />
    </section>

    <!-- Works -->
    <section class="section">
      <SectionTitle text="Works" className="-reverse" />
      <Works />
    </section>

    <!-- Skills -->
    <section class="section">
      <SectionTitle text="Skills" />
      <Skills />
    </section>

    <!-- Contact -->
    <div class="section -contact">
      <p class="u-text-center" lang="en">
        <a class="contactLink" href="mailto:sakucode1993@gmail.com">Contact Me</a>
      </p>
    </div>
  </main>
</Layout>

<style lang="scss">
  @use '../assets/scss/global' as *;

  .section {
    padding-top: fluid(80, 140, var(--sp-comp-width), var(--pc-comp-width));

    &.-about {
      padding-top: fluid(80, 148, var(--sp-comp-width), var(--pc-comp-width));
    }

    &.-contact {
      padding-top: fluid(80, 148, var(--sp-comp-width), var(--pc-comp-width));
      padding-bottom: fluid(120, 160, var(--sp-comp-width), var(--pc-comp-width));
    }
  }

  .contactLink {
    padding-inline: 1rem;
    border-bottom: 2px solid var(--main-color);
    font-size: fluid(48, 88, var(--sp-comp-width), var(--pc-comp-width));

    @include mq(md) {
      padding-inline: 1.5rem;
    }
  }
</style>

<script>
  import { SetObserver } from '../assets/js/setObserver';

  /**
   * heroセクションを監視する関数
   * @param entries - 監視対象要素
   */
  const heroObserve = (entries) => {
    if (!entries[0].isIntersecting) {
      document.documentElement.classList.add('is-heroOver');
    } else {
      document.documentElement.classList.remove('is-heroOver');
    }
  };

  new SetObserver('#js-hero', heroObserve);
</script>
